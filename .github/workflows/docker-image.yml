name: Docker Image CI
on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    # Cache pip packages
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: start db
      run: | 
        docker run -d --name task-postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password -e POSTGRES_DB=posotgres -p 5432:5432 postgres:15
        sleep 5
        export DATABASE_URL=postgresql://postgres:password@localhost:5432/postgres
        PYTHONPATH=. pytest -v --maxfail=1 --disable-warnings

   ##EC2
    - name: ec2 connect
      run: |
        chmod 400 pem/key-rsa.pem
        scp -i pem/key-rsa.pem yml/*.yml ubuntu@3.108.64.74:/home/ubuntu/deployments/
        ssh -i pem/key-rsa.pem ubuntu@3.108.64.74
        # Check Docker
        if ! sudo docker version &> /dev/null
        then
            echo "Docker not found. Installing..."
            sudo apt-get install docker.io     
        else
            echo "Docker is already installed."
        fi   
        # Check Docker Compose 
        if ! sudo docker compose version &> /dev/null
        then
            echo "Docker Compose not found. Installing..."
            sudo apt-get install docker-compose-plugin -y
        else
            echo "Docker Compose is already installed."
        fi
        
        # Start and enable Docker
        
        echo "Starting Docker..."
        sudo systemctl enable docker
        sudo systemctl start docker
        sudo systemctl status docker --no-pager
