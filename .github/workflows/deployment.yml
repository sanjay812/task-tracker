name: Docker Image CI
on:
  push:
    branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
  workflow_dispatch:
jobs:
  
  build-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: start db and test
      run: | 
        docker run -d --name task-postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password -e POSTGRES_DB=posotgres -p 5432:5432 postgres:15
        sleep 5
        export DATABASE_URL=postgresql://postgres:password@localhost:5432/postgres
        PYTHONPATH=. pytest -v --maxfail=1 --disable-warnings
  build-push:
    runs-on: ubuntu-latest
    needs: build-test  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        env:
          DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/task-tracker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Set image env
        run: |
          echo "IMAGE=${DOCKER_REPO}:${GITHUB_SHA::7}" >> $GITHUB_ENV
      - name: Build Docker image
        run: |
          docker build -t $IMAGE .
      
      - name: Push Docker image
        run: |
          docker push $IMAGE
      - name: Login to EC2
        env:
          EC2_IP: ${{ secrets.EC2_PUBLIC_IP }}
          S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          S3_ACCESS_KEY: ${{ secrets.IAM_ACCESS_KEY_ID }} 
          S3_SECRET_KEY: ${{ secrets.IAM_SECRET_ACCESS_KEY }}
        run: |
            chmod +x deploy.sh
            ./deploy.sh
